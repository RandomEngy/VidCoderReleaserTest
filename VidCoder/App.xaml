<Application
    x:Class="VidCoder.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:VidCoder.Controls"
    xmlns:converters="clr-namespace:VidCoder.Converters"
    xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:res="clr-namespace:VidCoder.Resources"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:vidCoder="clr-namespace:VidCoder">
    <Application.Resources>
        <converters:VisibilityConverter x:Key="VisibilityConverter" />
        <converters:EnumBoolConverter x:Key="EnumBoolConverter" />
        <converters:EnumBoolInverseConverter x:Key="EnumBoolInverseConverter" />
        <converters:EnumVisibilityConverter x:Key="EnumVisibilityConverter" />
        <converters:EnumVisibilityInverseConverter x:Key="EnumVisibilityInverseConverter" />
        <converters:InverseBoolConverter x:Key="InverseBoolConverter" />
        <converters:PercentDisplayConverter x:Key="PercentDisplayConverter" />
        <converters:DoubleDisplayConverter x:Key="DoubleDisplayConverter" />
        <converters:TitleDisplayConverter x:Key="TitleDisplayConverter" />

        <vidCoder:WindowXamlHelper x:Key="WindowXamlHelper" />

        <Color x:Key="DismissableMessageColor">#B5EDFF</Color>
        <Color x:Key="PresetGlowColor">#1696FF</Color>

        <SolidColorBrush x:Key="DismissableMessageBrush" Color="{StaticResource DismissableMessageColor}" />
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#B8E0F3" />
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
        <SolidColorBrush x:Key="ProgressBarBrush" Color="#00C800" />

        <Style x:Key="GrayOnDisabledControl" TargetType="Control">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False">
                    <Setter Property="Foreground" Value="#999999" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PresetComboStyle" TargetType="ComboBox">
            <Setter Property="Height" Value="23" />
            <Setter Property="MinWidth" Value="140" />
            <Setter Property="MaxWidth" Value="220" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="ItemsSource" Value="{Binding PresetsService.AllPresets}" />
            <Setter Property="UseLayoutRounding" Value="True" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Padding" Value="5 2" />
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" Text="{Binding DisplayName}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Preset.IsBuiltIn}" Value="False">
                                                <Setter Property="Foreground" Value="#0B4BC2" />
                                                <Setter Property="FontWeight" Value="SemiBold" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Preset.IsQueue}" Value="True">
                                                <Setter Property="Foreground" Value="#222222" />
                                                <Setter Property="FontWeight" Value="Normal" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock
                                Margin="7 0 0 0"
                                VerticalAlignment="Center"
                                FontSize="11"
                                FontStyle="Italic"
                                Foreground="Gray"
                                Text="{x:Static res:MainRes.ModifiedAffix}"
                                Visibility="{Binding Preset.IsModified,
                                                     Converter={StaticResource VisibilityConverter}}" />
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CenteredCheckBox" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="#00FFFFFF" SnapsToDevicePixels="True">
                            <mwt:BulletChrome
                                Width="13"
                                Height="13"
                                Background="{TemplateBinding Panel.Background}"
                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                IsChecked="{TemplateBinding ToggleButton.IsChecked}"
                                RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                                RenderPressed="{TemplateBinding ButtonBase.IsPressed}" />
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent">
                                <Setter Property="FrameworkElement.FocusVisualStyle">
                                    <Setter.Value>
                                        <Style TargetType="{x:Type IFrameworkInputElement}">
                                            <Style.Resources>
                                                <ResourceDictionary />
                                            </Style.Resources>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle
                                                            Margin="14 0 0 0"
                                                            SnapsToDevicePixels="True"
                                                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                            StrokeDashArray="1 2"
                                                            StrokeThickness="1" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Control.Padding">
                                    <Setter.Value>
                                        <Thickness>
                                            0,0,0,0
                                        </Thickness>
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>
                                        True
                                    </s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled">
                                <Setter Property="TextElement.Foreground">
                                    <Setter.Value>
                                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>
                                        False
                                    </s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GrayNonCompatible" TargetType="ComboBoxItem">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsCompatible}" Value="False">
                    <Setter Property="Foreground" Value="Gray" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SectionHeader" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <Style x:Key="InputOutputInfoSection" TargetType="Border">
            <Setter Property="Padding" Value="3" />
            <Setter Property="CornerRadius" Value="10" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#999999" />
        </Style>

        <Style x:Key="ConfigSectionStack" TargetType="StackPanel">
            <Setter Property="Margin" Value="20 0 0 20" />
            <Setter Property="Orientation" Value="Vertical" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>
        <Style x:Key="ConfigSectionHeader" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Margin" Value="0 0 0 6" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>

        <SolidColorBrush x:Key="DisabledBrush" Color="#4C4C4C" />
        <Style x:Key="LongToolTip" TargetType="TextBlock">
            <Setter Property="MaxWidth" Value="400" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>
        <Style x:Key="LongToolTipHolder" TargetType="FrameworkElement">
            <Setter Property="ToolTipService.ShowDuration" Value="20000" />
        </Style>
        <Style x:Key="RowButton" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="23" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="10 0 0 0" />
        </Style>
        <Style x:Key="NormalWindow" TargetType="{x:Type Window}">
            <Setter Property="Background" Value="WhiteSmoke" />
        </Style>
        <SolidColorBrush x:Key="AlternateBackground" Color="#FEFEFE" />
        <Style x:Key="DescriptiveText" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="Gray" />
        </Style>
        <LinearGradientBrush x:Key="InputBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#C1E6FF" />
            <GradientStop Offset="1.0" Color="#ABC6D8" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="OutputBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#CCFFC9" />
            <GradientStop Offset="1.0" Color="#B7E0B3" />
        </LinearGradientBrush>
        <DropShadowEffect
            x:Key="InfoBoxShadow"
            BlurRadius="3"
            Direction="315"
            Opacity="0.3"
            ShadowDepth="3" />
        <RadialGradientBrush x:Key="RedFill" Center="7,1.5" GradientOrigin="7,1.5" MappingMode="Absolute" RadiusX="10" RadiusY="10">
            <GradientStop Offset="0" Color="#DD0008" />
            <GradientStop Offset="1" Color="#A30008" />
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="RedPressFill" Center="7,1.5" GradientOrigin="7,1.5" MappingMode="Absolute" RadiusX="10" RadiusY="10">
            <GradientStop Offset="0" Color="Red" />
            <GradientStop Offset="1" Color="#DD0008" />
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="BlueFill" Center="7,1.5" GradientOrigin="7,1.5" MappingMode="Absolute" RadiusX="10" RadiusY="10">
            <GradientStop Offset="0" Color="#176DC4" /> 
            <!--  Center  -->
            <GradientStop Offset="1" Color="#176DC4" /> 
            <!--  Edges  -->
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="BlueHoverFill" Center="7,1.5" GradientOrigin="7,1.5" MappingMode="Absolute" RadiusX="10" RadiusY="10">
            <GradientStop Offset="0" Color="#3D9EFF" />
            <GradientStop Offset="1" Color="#3D9EFF" />
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="BluePressFill" Center="7,1.5" GradientOrigin="7,1.5" MappingMode="Absolute" RadiusX="10" RadiusY="10">
            <GradientStop Offset="0" Color="#125599" />
            <GradientStop Offset="1" Color="#125599" />
        </RadialGradientBrush>
        <SolidColorBrush x:Key="GreenHoverFill" Color="#00AF00" />
        <SolidColorBrush x:Key="GreenPressFill" Color="DarkGreen" />
        <Grid x:Key="RedX" Background="Transparent">
            <Rectangle
                Name="rect2"
                Width="14"
                Height="3"
                Fill="{StaticResource RedFill}">
                <Rectangle.LayoutTransform>
                    <RotateTransform Angle="-45" />
                </Rectangle.LayoutTransform>
            </Rectangle>
            <Rectangle
                Name="rect1"
                Width="14"
                Height="3"
                Fill="{StaticResource RedFill}">
                <Rectangle.LayoutTransform>
                    <RotateTransform Angle="45" />
                </Rectangle.LayoutTransform>
            </Rectangle>
        </Grid>
        <Style x:Key="PlusSign" TargetType="Polygon">
            <Setter Property="Points" Value="4,0 6,0 6,4 10,4 10,6 6,6 6,10 4,10 4,6 0,6 0,4 4,4" />
            <Setter Property="Fill" Value="Green" />
            <Setter Property="Margin" Value="0 0 4 0" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="RemoveButtonStyle">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Name="removeButtonGrid" Background="Transparent">
                            <Grid.ToolTip>
                                <ContentPresenter />
                            </Grid.ToolTip>
                            <Grid
                                Width="15"
                                Height="15"
                                Margin="{TemplateBinding Padding}">
                                <Border
                                    Name="hoverBorder"
                                    BorderBrush="#7DA2CE"
                                    BorderThickness="1"
                                    CornerRadius="3"
                                    Visibility="Collapsed">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Offset="0.0" Color="#DBEAFC" />
                                            <GradientStop Offset="1.0" Color="#C1DBFC" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Rectangle
                                    Name="rect2"
                                    Width="12"
                                    Height="2"
                                    Fill="{StaticResource BlueFill}">
                                    <Rectangle.LayoutTransform>
                                        <RotateTransform Angle="-45" />
                                    </Rectangle.LayoutTransform>
                                </Rectangle>
                                <Rectangle
                                    Name="rect1"
                                    Width="12"
                                    Height="2"
                                    Fill="{StaticResource BlueFill}">
                                    <Rectangle.LayoutTransform>
                                        <RotateTransform Angle="45" />
                                    </Rectangle.LayoutTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="rect1" Property="Fill" Value="{StaticResource BlueHoverFill}" />
                                <Setter TargetName="rect2" Property="Fill" Value="{StaticResource BlueHoverFill}" />
                                <Setter TargetName="hoverBorder" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="rect1" Property="Fill" Value="{StaticResource BluePressFill}" />
                                <Setter TargetName="rect2" Property="Fill" Value="{StaticResource BluePressFill}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AddButtonStyle">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid
                            Name="addButtonGrid"
                            Width="15"
                            Height="15"
                            Background="Transparent">
                            <Grid.ToolTip>
                                <ContentPresenter />
                            </Grid.ToolTip>
                            <Border
                                Name="hoverBorder"
                                BorderBrush="#7DA2CE"
                                BorderThickness="1"
                                CornerRadius="3"
                                Visibility="Collapsed">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0.0" Color="#DBEAFC" />
                                        <GradientStop Offset="1.0" Color="#C1DBFC" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Rectangle
                                Name="rect2"
                                Width="10"
                                Height="2"
                                Fill="Green">
                                <Rectangle.LayoutTransform>
                                    <RotateTransform Angle="0" />
                                </Rectangle.LayoutTransform>
                            </Rectangle>
                            <Rectangle
                                Name="rect1"
                                Width="10"
                                Height="2"
                                Fill="Green">
                                <Rectangle.LayoutTransform>
                                    <RotateTransform Angle="90" />
                                </Rectangle.LayoutTransform>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="rect1" Property="Fill" Value="{StaticResource GreenHoverFill}" />
                                <Setter TargetName="rect2" Property="Fill" Value="{StaticResource GreenHoverFill}" />
                                <Setter TargetName="hoverBorder" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="rect1" Property="Fill" Value="{StaticResource GreenPressFill}" />
                                <Setter TargetName="rect2" Property="Fill" Value="{StaticResource GreenPressFill}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="PopupInfoTemplate" TargetType="ContentControl">
            <Border
                BorderBrush="Gray"
                BorderThickness="1"
                CornerRadius="4">
                <Border.Effect>
                    <DropShadowEffect
                        BlurRadius="3"
                        Direction="315"
                        Opacity="0.3"
                        ShadowDepth="6" />
                </Border.Effect>
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0.0" Color="White" />
                        <GradientStop Offset="1.0" Color="LightGray" />
                    </LinearGradientBrush>
                </Border.Background>
                <ContentPresenter />
            </Border>
        </ControlTemplate>
        <Brush x:Key="SplitterBrush">#BCBCBC</Brush>
    </Application.Resources>
</Application>
